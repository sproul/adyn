q
Tell me about the last time you've been in conflict w/ a peer, and how you handled it.
a
There was an engineer at Sybase who was reporting to me for some time, and she was very slow -- which I didn't mind so
much, but what would happen is that she would project a date for completing a task, and then the work would not get
done __and__ she would not communicate to me that the date was slipping.  And so I ended up having to go to her fairly
frequently to extract the current status -- something that I don't think she really enjoyed, and I definitely didn't
want to do it, but I didn't know how else to keep on top of where the project was.
q
How do you handle the situation where you know a better way to go in a design, and yet a different method is favored?
Give me an example of the situation above.
a
I think that when a team is putting together a design, there is a time when various alternatives will be debated, and
at that point, if the general thinking is not going your way, I think it is just important to try to make sure that if
you are outvoted, it is not because people don't understands what it is that you think, but it's just a difference of
opinion.  Eventually, a design will be settled on, and at that point I think it's everyone's mission to make the best
possible effort to make it work.

At Sybase, our nightly build and test runs were failing on certain platforms because their network connectivity was not
reliable.  I argued in favor of maintaining separate copies of the code lines on those platforms in order to reduce the
dependence on the network, but the general consensus was that this approached did not solve the real problem, which was
the shaky network connections.  But my thinking was that we had no idea why these platforms were suffering the failures
that they were, and because the system and network administrators were heavily overworked they probably also were not
capable of putting in the time and research to get to the bottom of the problem, and so just as a practical matter
these problems were probably not going to be solved in the short term.  So initially I lost this argument, and an
effort was made to put pressure on the network administrators to figure out what was wrong.  They did try, but they
were not able to solve the problem, and eventually the steady flow of failures brought people around to my point of
view.
q
Problem Solving: When was the last time you solved a difficult problem that would have significant impact? What was the
situation? How did you go about analyzing the problem? What additional information did you gather? What alternative
solutions did you consider? Tell me how you implemented your solution. What was the outcome?
a
At extensity we realized that there was a dependency on the client side for our Internet Explorer users on using a
particular JVM build.  Failure to use this JVM was resulting in the application hanging, and this was leading to a lot
of support calls.  It wasn't clear how to detect which JVM was installed from Java but I poked around the Microsoft web
site and figured out a Microsoft proprietary method for determining the build number.  I ended up writing an applet
which used inspection to determine if the JVM was equipped with the Microsoft methods, and if it was, calling them.  If
the wrong JVM was in place, I had a JavaScript wrapper which would take the user to a page explaining that situation
and offering to download and install the correct JVM.
q
What's one of the hardest decisions you've ever had to make?
Decision Making: What was the most difficult decision you have made in the last six months? What was the situation?
What made it difficult? What factors or variables did you consider? What did you decide? What was the result?
a
Going back a little that further, last fall, after I had been working on my own product for several months, extensity
called me and offered me additional contract work.  I was very tempted to say yes because it is certainly an
uncomfortable feeling to not be earning any money, yet I knew that if I took on contract work from them, this new
responsibility would probably be sufficiently absorbing that it would not be possible to make significant progress on
my educational software.  On the other hand, I was at this time engaged to be married, and my fiance was urging me to
take it in order to have the additional security.  I ended up deciding not to take advantage of this offer, and instead
to continue with my work.  The result was that the educational software has been completed, and is currently in beta.
I think I need some more time to know whether that was a good decision or not, however.  If I make no money with the
product, I will have had the satisfaction of creating a fine piece of software, but I will have foregone significant
earnings in order to achieve this result.  I'm not sure which is more important.
q
Achievement /Drive: Describe a situation in which you believe you were effective in achieving an aggressive goal. What
caused you to work hard to meet this objective? What methods or skills did you use to meet your goal? What were the
results? What feedback did you receive?
a
TRW archiving program controlling hard drives: performance goal.
q
Handling Details: Tell me about the most significant project you have worked on in which it was crucial to keep track
of details while still managing the “big picture.” What was the project? What skills did you utilize in managing
it? How did you make sure the work got done? How did you keep focused on the overall goal of the project while still
managing all of the specific parts? How did the project turn out? What feedback did you receive on your management of
the task?
-Tell me about a time when you had to go above and beyond the call of duty in order to get a job done.
a
qa details for web kbd, teacher.  browser compatibility.
At Sybase I was asked to get the build and test under control for the connectivity division.  There was a steady flow
of high priority minor requests which needed to be satisfied immediately, but there was also a larger problem which
needed to be solved which was the general lack of automated infrastructure to support a reliable nightly build and
test.  Because the job was extremely subject to interruptions, I found it necessary to record every request, even
really trivial ones, in order to assure myself that they were all being satisfied.  So I ended up with a system of
checklists along with numerical priorities to make sure that the most crucial items, especially ones which didn't take
very long, would be satisfied first.  In order to attack the larger problem of a lack of automated infrastructure, I
worked evenings and weekends to put into place a system of scripts which facilitated the process and its automatic
analysis.  Management was supportive of me in all instances of this job, and the feedback was very positive once the
automated infrastructure was up and running.
q
Oral Communication: Describe a time when you had great difficulty communicating your thoughts clearly to another person
or group. What was the situation? What message were you trying to convey?  Where did the difficulty in communicating
effectively lie? What did you do to get your point across more clearly? What was the outcome?
a
once I had trouble expressing a design issue to a co-worker.  I think the main problem was that she was not a native
English speaker.  My usual method is to just slow down, and -- without being condescending -- try to express things
really simply.  But this wasn't working either, and I found that what did work was to get a couple of other people
involved in the conversation.  With more people came more ways of expressing the same information, and I think that
made it easier to understand.
q
Conflict Management: Tell me about a time when you voiced a concern or disagreement to a co-worker, supervisor, or
professor. Where did the disagreement originate? What did you say to the other person? What was his/her reaction? What
was the outcome of the disagreement?
Give an example of when you had to work with someone who was difficult to get along with. Why was this person
difficult? How did you handle that person?
a
Sanitized version of Chris and me: when I was assigned to help out with an extensity project, I encountered some
serious build problems which were due to a co-worker apparently not checking in all elements of his solution.  I went
to him and he flatly denied that this was the case.  I checked my work and verified that it was the case and we
revisited the situation, and he still denied it.  I changed tack and encouraged him to use a tool that I had written
for detecting modified modules which had not been checked back into the central repository, and eventually he did
install on his machine, and this did reveal the modules which were missing; with the problem explicitly revealed, he
finally realized what the situation was, and checked in the missing modules.  I eventually convinced a number of people
to use this tool, which eliminated the need for error prone independent recordkeeping of what modules had been
modified.
q
Coordinating/Leading Others: Tell me about a situation in which you had to coordinate several people to achieve a goal.
What prompted you to take the lead? How did you go about coordinating and leading the group? How did they respond? What
tools did you use to measure the progress of the group? What was the outcome?
a
At TRW I was part of a team of engineers prototyping in preparation for a bid to automate certain IRS processes.
Because of my strong knowledge of win32, I ended up being a de facto lead for technical questions.
q
Managing Stress: Describe your most disappointing experience. How did you cope with it? What did you do to move beyond
it?
a
At TRW it was very disappointing to see the IRS project bid fail.  But once it was clear that this was the outcome, we
got together the members of the team to analyze our work and see if there had been anything that we could have been to
have achieved a different outcome.  The general feeling was that the project had fallen through for business reasons --
that is, it was a little bit too all-encompassing, yet its technical achievements were sound.  The upshot was that we
worked to at least preserve and document the technical achievements of the project for future use by similar projects
within TRW.
q
Describe a situation in which you were able to use persuasion to successfully convince someone to see things your way.
a
cnf approval.
q
What steps do you follow to study a problem before making a decision?
a
first: can it be broken down into component problems which are better understood?
this depends on several factors:
is it possible to reverse the decision?
Will getting the question wrong have serious consequences (e.g., customers would be affected, deadlines would slip,
etc.)
am I well-informed in the topic?
Are my co-workers well-informed in the topic?
how big is the topic?  Is it a huge body of knowledge which requires lengthy study?  Or is it a relatively simple
question which can be referred to an expert?
Depending on the answers to these questions, I use the following methods to get information:
online search
consult with co-workers/friends
buy books and study them
q
Describe a very stressful experience and how you dealt with it.
Describe an instance when you had to think on your feet to extricate yourself from a difficult situation.
Describe the most significant or creative presentation which you have had to complete.
a
At extensity, one of my co-workers was going to lead a class given in San Francisco for extensity developers.  The
class was $500 for the day, and had attracted extensity developers from around the country.  My co-worker asked me if I
could come also can be a technical backup.  I agreed to that.  My co-worker ended up being very busy in today's leading
up to the class, and so did not have time to do any preparation for it.  I think he may have been pretty stressed about
it, and when the day arrived, he had a horrible back problem which made him not want to come.  So he called me at 630
in the morning and asked me how I felt about leading the class alone.  Since I had only been scheduled to be a backup
resource for difficult questions, I also had not done any special preparation.  But I told him I would do my best.  So
I went into the learning Center, where the students were each equipped with a PC and an extra monitor to display the
fine teaching materials which the instructor would surely be bringing.  I brought my laptop, but then there were some
problems connecting it to the classroom LAN, and so even that was not initially available.  While the local network
administrator worked on my laptop, the class started and I just lectured about the general programming environment
working with extensity.  I was very stressed, but there was certainly a lot to talk about and so I was able to proceed.
For the afternoon we were scheduled to do a lab of extensity problem solving in the J++ environment.  I was familiar
with using J++ as a debugger, but since Microsoft projects are not used at extensity, I was not familiar with how to
build a J++ project and make it work with the extensity environment, which inherently went against some Microsoft
projects conventions.  But during lunch I was able to figure out how to do it and then was able to lead the lab in the
afternoon as anticipated.  I wouldn't say that it was a completely smooth performance, but we were able to do some
exercises and the class seemed pleased with the result.
q
What was the most complex assignment you have had? What was your role?
a
<ul>
<li>educational software: multiple languages, adaptive learning theory, complexities of the various foreign languages, performance issues.</li>
<li>Web keyboard proxy server: multiple languages, interacting with multiple complex programs, extremely variable input</li>
<li>AirTouch: multiple languages (Java on client and server, pl/SQL) , client requirement complexity, database performance, network performance</li>
</ul>
q
Provide an example of how you acquired a technical skill and converted it into a practical application.
a
<ul>
<li>perl: browser accelerator, Web keyboard</li>
<li>ODBC: WhiteLight effort</li>
<li>JDBC: extensity</li>
<li>servlets: tomcat administrator</li>
</ul>
q
How would you evaluate your ability to deal with conflict?
Give me an example of a time when you were able to successfully communicate with another person even when that
individual may not have personally liked you (or vice versa).
a
there was a support engineer who had trouble configuring a bug fix which I provided him, and I'm not sure if he didn't
like me, but he misdiagnosed his troubles and thought that my fix was not correct, and complained about it in a hostile
manner, with e-mail cc'd to a very wide audience.  We had a lengthy exchange by e-mail, but only by actually visiting
him and stepping him through the fix' installation where we able to straighten everything out.  I thought the important
thing in this interaction was to not get mad and just keep focused on the problem, even though I did find the guy's
style to be aggravating.
q
Give me a specific example of a time when you used good judgment and logic in solving a problem.
Describe a creative/innovative idea that you produced which led to a significant contribution to the success of an
activity or project.
a
<ul>
<li>cnf.</li>
<li>adaptive learning</li>
<li>swapping hex editor.</li>
<li>Sybase incremental build code line updates.</li>
<li>Aion: method for tracking memory leaks in the pre-purify days.</li>
</ul>
q
Describe the best supervisor you've ever had.
What kind of supervisor do you work best for? Provide examples.
a
does not micromanage.  Is open to new proposals.  Is available.  Has good engineering judgment.  I had a manager at TRW
whom I really liked working with.  He had excellent insights into engineering problems, and also had a lot of
confidence in me and allowed me a lot of scope to get things done.  I never felt constrained, and yet he was always
available to discuss and strategize how-to approach problems.
q
Describe a situation that required a number of things to be done at the same time. How did you handle it? What was the
result?
a
<ul>
<li>extensity: involved in several projects simultaneously, with pressure from customers.  I just had to be very
disciplined about tracking all the projects and prioritizing in order to prevent myself from becoming a bottleneck.
communication with the teams was very important.</li>
<li>Sybase build and test: constant flow of minor requests from many people, and also a larger context of infrastructure need</li>
</ul>
q
How do you determine priorities in scheduling your time? Give examples.
a
highest priority goes to work on which co-workers have a dependency.  I don't want to be a bottleneck.  for tasks which
are falling behind schedule, I am inclined to dedicate more effort.  Tasks which seemed to involve risks -- e.g.,
unfamiliar technology, dependencies on other groups, an aggressive timetable, a very high level of importance -- get
higher priority, just to reduce my chances of not maintaining a good level of control.
q
Give me an example of an important goal which you had set in the past and tell me about your success in reaching it.
a
learning C in my summer, learning Java during my sabbatical.
q
Describe a problem situation where you had to seek out relevant information, define key issues, and decide on which
steps to take to get desired results.
a
jvm sniffer
AirTouch performance: network, database, competing consumers of resources on the main host
q
We can sometimes identify a small problem and fix it before it becomes a major problem. Give an example of how you have
done this.
a
vigilant purify use at Sybase.  Memory leaks are not a very serious problem until the products they invest go into
production.  Also, it is much easier to track them down when they are immediately reported upon appearing in the code
line.  Normally it will be the fall of recent changes.
q
Tell me about a time in which you had to use your written communication skills in order to get an important point
across.
a
cnf proposal: I tied together the common theme of some assignments I had gotten and how they could be solved as a unit
with some new software.
q
Give me a specific occasion in which you conformed to a policy with which you did not agree.
a
Sybase sustaining engineering forms.  Sybase waterfall design methodology, with lengthy design phases, segregated from
implementation.
q
Describe a time on any job that you held in which you were faced with problems or stresses that tested your coping
skills.
a
Sybase build and test: it was a very high volume of work which wore me down a little bit: averaged 60 hour weeks for a
year
q
By providing examples, convince me that you can adapt to a wide variety of people, situations and environments.
a
worked with devo, support, customers; fixing bugs in production under pressure, doing devo.
q
Give an example of a time in which you had to be relatively quick in coming to a decision.
a
high pressure bug fixing@@
q
are you ready to start this Sat.?
a
certainly.  So do you guys work every Saturday, or is this a crunch time?
q
why do you like your best friends?
why do they like you?
How would a good friend describe you?
a
because they are considerate, nice, funny, good people.
my friends probably take the same approach.
q
any questions for me, the interviewer?
a
<ul>
<li>What does a person need to be successful in this job?</li>
<li>How can a person like me contribute?</li>
<li>Why have others been unsuccessful?</li>
<li>What type of person will be happy in this job?</li>
<li>What type of person will be unhappy?</li>
<li>I'm curious to hear examples of people who have not worked out in the job.</li>
</ul>
q
Tell me about your biggest failure.
a
state problem: and what I'm doing to fix it...

Well, it may be early for me to call this a huge failure, but I think I may have pursued a suboptimal strategy for
implementing the online learning application.  I chose a combination of Perl and Java to be the platform for this
software and the basis for my choice was that it would make the implementation and also the administration once the
product was running very simple.  What I didn't think about was the fact that this style of software does not match the
requirements that many software resellers have for packages that they will market.  The most common arrangement is that
software comes in a stand-alone bundle with no dependency on the Web or the availability of particular software on an
ISPs.  Meanwhile my software as currently implemented only works over the Web.  My approach in choosing the
architecture that I did made the implementation and beta testing relatively painless, but didn't give enough weight to
the longer-term business needs -- that is, my hope that the product would eventually turn a profit.  So this has been
an important lesson for me to think through the implications of such fundamental choices down the line.

q
How does the process of writing code for internal customers differ from that of writing software for an external
a
market?
When you are writing software for internal consumption, you will typically know exactly who the audience is, and so it
is possible to engage those people from the earliest stage.  When you are writing for an external market, on the other
hand, although you can do research to hypothesize what the market wants, I think it is a very difficult problem to
determine with confidence what are the important features.  One way to go is to focus on existing customers, assuming
that they will approximate the larger market, but of course there is always the possibility that there is some large
market segment which is completely distinct from the population of existing customers, and could make a new product
very successful.
q
Which language is best, perl or Java?
a
This depends on the task at hand.  If I needed to build a simple parser, I would probably prefer perl because it's
regular expression language is so convenient to use for that purpose.  Although logically equivalent packages exist for
Java, their use is much wordier.  If I needed to provide distributed functionality, then the path of least work might
be to write an EJB.


q
Describe your design process for teacher, browser spinach, and Web keyboard.
a
Use cases.
<ul>
<li>Data structures.  </li>
<li>Simplest possible functional framework.  </li>
<li>Fleshed out, with focus on the areas which were the riskiest.  </li>
<li>For teacher, I was concerned about the performance issues coming from maintaining the user database on the server.  </li>
<li>For bs and wk, I was concerned about how to cope with poorly formed HTML.</li>
</ul>
q
What are the attributes of a good leader?   communication and initiative
Do you consider yourself a leader?
Give a concrete example of leadership that you showed in a project.
a
Since I have only very rarely had engineers under me, I think the way I have generally shown leadership in my various
projects has been by my initiative in making proposals to solve problems and then implementing them.  I am not a
passive employee.
<ul>
<li>At Sybase, I showed leadership by responding to the building test assignment with a series of proposals for automating that job.</li>
<li>At TRW, the cnf and nextFile projects solved a category of problem that had been sucking up a lot of time.</li>
</ul>

q
Give me an example of planning for a complex project, and then tell me how you adjusted your plans in order to overcome
obstacles during the execution of this project.
a
For teacher, I initially specified a fairly verbose protocol of data between the server and client, but during testing
with slow connections, the performance was poor.  I adjusted the protocol to make it lighter weight, and more
importantly, mood responsibility for propagating the data to the server to a background thread which would not hurt the
perceived performance.




q
Tell me about yourself/what are your strengths?
How would you describe yourself?
a
[also a good answer to "What do you think it takes to be successful in a company like ours?"]
<p>
My main strength is that I am very productive, my work is very clean; and
I'm a very fast learner -- I'm able to pick up and understand new areas
really quickly; and I guess the bottom line is that I do what needs to be
done to get the results we want.  For most of the projects that I have
worked on there have been at least occasional crunches.  But when that
happens, I step up my efforts in order to meet my obligations, whether
that means working on weekends or late at night.  In one of my jobs, I
averaged 60 hour weeks for over a year.  The way I see it, this is not an
ideal lifestyle, but I'm willing to do whatever needs to be done to
accomplish our goals.  [Tell me more about this situation where you worked
60 hours a week.  Why was that necessary?]  This was when I was working
for Sybase; I was asked to handle the code line administration and build
responsibilities for the connectivity division.  The thing with this job
was that there was a moment-by-moment had the flow of requests that had to
be satisfied right away, but also a huge need for work on the software
infrastructure in order to automate a lot of the processes.  This position
had been left to pretty junior people who weren't capable of seeing the
big picture and figuring out how the work could be reorganized to make it
a low bit more manageable.  We had very recently taken on a bunch of new
platforms and the lack of a reliable build and has infrastructure and only
just become perceived as a significant problem.  So I took on the
responsibility to deal with this and it was a very intense job because
during the day there were constant requests that needed to be satisfied
immediately, and so the way it worked, I ended up doing what I needed to
do to satisfy those requests, and then working late to develop the
software required to automate the builds and the maintenance of our code
lines on the various platforms.  This ended up being a lengthy battle, but
the eventual results were very gratifying.
<p>
[Other examples?]
<p>
At Extensity it was a fairly constant theme that I was brought in to help
with projects that were in trouble.  Here the problem was that we had a
product which was very complex and fragile, and also just the role of the
group lent itself to high-pressure: we were in direct contact with
customers whose processes were very dependent on what we could do for
them.  And it didn't help that the product was very expensive, and so
customers' expectations were generally pretty high.
q
Examples of quick, independent learning:
a
I know I told you that I'm a quick learner, but I would like to say just
a little bit more about that.  A large proportion of what I know about
this field comes from buying the books and studying them all the way
through, and then applying this knowledge.  I think when facing a new
technology, there is an initial time which is not very fun where one
doesn't know the area well enough to always be aware of the various
alternatives, and where it really pays to go through the pain of
thoroughly studying the references and code in order to understand the
environment in depth.  So for me, I've gone through this stage of study in
learning the internals and system interfaces of all the operating systems
I've worked with, and most recently I've been doing this with Java and the
various classes supporting J2EE.

q
What are your weaknesses?
a
I need to get stronger in j2ee.
I feel shy as a public speaker, and that may be helpful for my own products....@@
@@I really cannot think of any weaknesses which would prevent me from being
very effective as a software implementer.
q
Why do you prefer to be a contractor instead of a full-time employee?
a
I think in general the trade-off is between higher compensation and
security.  (And of course, stock, although people don't seem to care about
that so much anymore.)   I don't care so much about security because,
although the current job market is not good, I don't worry about getting
more work.  I've been very productive in all of my jobs, so the way I see
it, I'll always be able to get work from people who have worked with me
before even when the job market is pretty grim overall, the way it is now.
q
Do you know anything about CORBA?
a
Although I don't have any CORBA projects in my work history, I actually am
very familiar with CORBA, and I think I would quickly be productive in
CORBA projects.  When I was at Sybase, there was a lot of talk about using
CORBA for various purposes, and I thought there was a good chance that I
was going to get some heavy CORBA assignments.  So at that time I studied
the architecture and the various services, and got to a decent level of
understanding.  As it turned out, the CORBA assignments never materialized
-- and so I don't claim CORBA expertise, but I definitely understand how
that system works and I think I would be up to speed right away.
q
Which do you prefer, working alone or in a team?
Can you relate your answer to concrete examples in your work history?
a
When you work in a team, you are able to brainstorm and work together to
overcome problems, and this can be a powerful thing.  However, the more
people who are involved, the more overhead you have coordinating between
them.  So I think there is a trade-off which has to be judged according to
the nature of the problem being solved.  If we're talking about a simple,
well understood problem, then I would prefer to work alone and just get it
done immediately.  But if the problem is complex and not well understood,
then I think working together can result in fewer mistakes and
misunderstandings.  I think this is especially true in situations where
the requirements are in flux, and there's a significant risk of doing work
which isn't going to match what is wanted by the end of the project.  Then
I think working closely together can lead to really big savings in time
and effort.
<p>
Sure -- in my work at Extensity where I was integrating
customers' accounting systems with our product, the work was very
dependent on exactly satisfying the customer's requirements, and often
these requirements were not specified very well.  This was definitely a
case where, although the work was not necessarily that complex, since we
did not have great knowledge or familiarity with the customer's specific
systems, there was a big risk of implementing software which would not
conform to the customer's environment.  So in this type of situation, I
thought it was extremely beneficial to keeping close contact with the
customer, always making sure that we were on the same page.  When I was
working with AirTouch, I frequently integrated my software with my
counterpart's system, meaning that we had a fairly constant sanity check
on what we were doing; I was never in a situation where I was doing lots
of work which he hadn't seen yet, and so we could be pretty confident that
we were progressing toward our goal.  The result in this project was that
we were able to make everything work without any significant missteps.
And an example of where working alone was beneficial: when I was
at Aion I wrote the database integration for the product.  Although the
task involved lots of code and was fairly complex, I did the work with no
specification and no written design or review before the work was done.
Normally I would not be that comfortable with such a situation, but here
the problem was very well understood -- I knew what the interface was
going to be on our product's side, and it was just a question of making
the product work with all kinds of SQL data, and implementing it in clean,
documented code which would be easy to maintain.  I knew exactly how to do
this, and not needing to coordinate with anyone else on the work made it
go a lot faster.

q
Which do you prefer, working in the office, or off-site?
a
This answer should be related to the question about working in teams vs.
working alone.  If the work requires working in teams, then being on-site
is a big advantage.  If it doesn't, then working off-site can be good
since it saves the commute time and can result in a work environment with
fewer distractions.






q
Summarize your experience with J2EE.
a
Extensity's server products work with Web logic, so deploying or
configuring Extensity's product always involves setting up and configuring
Web logic; however, as an engineer deploying the product for individual
customers, my focus as a programmer was always on the custom programming
elements I was working with to interface between our product and the
customer's accounting and other packages.  So we did use JDBC through Web
logic to update customer databases...  I would not say that my experience
programming J2EE classes is very heavy, but I am very familiar with the
architecture and capabilities of J2EE, and I think that I will very
quickly be an effective programmer in a J2EE environment, just judging
from my experience coming up to speed in other complex environments in the
past.  So for example, at my white light job, I needed to learn ODBC and a
very large set of C++ classes called ACE, as well as the Rogue Wave
packages, and I was effective almost immediately.  At Extensity probably
the biggest hurdle was becoming familiar with the internal architecture of
Extensity's products, and learning how to get things done in that
environment, and there also I was very productive at an early date.
q
How strong are you in Java?
a
I feel very strong.  I definitely feel in my element when I'm programming
Java.  I would say that this is my favorite programming language because
it elegantly supports implementing object-oriented solutions, so it gives
you lots of power, but it also is a very safe language.  Not having to
directly manage memory except by not leaving unnecessary references hang
around is a real boon for a programmer.  And the Java community is so
large and prolific, it seems to me that it is a very frequent occurrence
that a publicly available class will already exist which can solve
whenever the problem of the moment may be.
q
What programming environments have you used for Java?
a
For debug I used J++, but for development I relied on emacs.

q
Describe a change in design that you originated based on your knowledge of business.
a
I was assigned to write a back end reporting function for extensity's expense reports application for a particular
customer, and I knew from my work with the customer's front end rules that it was prohibited for certain expense types
to not use the company credit card, and yet I saw that on the back end there was no control to stop that kind of usage.
I think maybe the original thinking was that since the front-end in force the prohibition, that we would be safe and
not checking for it in the back end, but in fact there were various facilities for importing expenses which bypassed
the GUI, so I thought this represented a vulnerability to the system.  So I proposed and implemented checks on the back
end to fill this gap.


qWhy did you leave your last job?
a
Well, I was working on a short-term contract which was renewed over 2 1/2 years, and the company was very happy with my
work, but as their business began to suffer, they eliminated all of their contractors as an economy move.  In fact I
was retained for a number of months after all of the other contractors were dismissed, but eventually my turn came too,
over the objections of my immediate supervisors.
<p>
As for my work with Adynware, after working on the educational software package for a year, the software is now and
data and does not require a full-time effort.  So it this point I'm underemployed and ready for new work.
q
What are your long range and short range goals and objectives?
a
I'm very happy working as a software engineer, and I don't particularly of aspire to, for example, become a manager.  I
think the various technologies that we work with our advancing so fast that I really can't see getting bored with this
work.  I just want to keep learning new things and keep refining my techniques in order to become more effective and
more productive.
q
What specific goals other than those related to your occupation, have you established for yourself for the next ten
years?
a
I'm very interested in foreign languages and I hope to be fluent in Spanish and Italian, and possibly German in another
decade.  I'm studying those languages with my own educational software and by reading children's books and watching
foreign news.
q
What do you see yourself doing five years from now? Ten years from now?
a
I hope to be in the same profession, but just 5/10 years stronger and more effective than I am now.  I think I am a
strong engineer now, but one can always improve, and it is my hope that I will do so.
q
What do you really want to do in life?
a
I want to be a good father and husband and provide a secure and safe environment for my family.  Beyond that, I hope
that my wife and I can achieve a lifestyle where it is possible for us to do some amount of traveling.
q
How do you plan to achieve your career goals?
a
As I said, my goal is to continue to develop and improve as a software engineer.  To do this, unless I'm in a real
crunch period, I try to put aside a few minutes every day to look at new technologies that I am interested in, like
struts, for example.
q
What are the most important rewards you expect in your career?
a
The satisfaction of doing excellent work and being respected by my peers, and just being free to create software and
get it to people whom it will help.  And oc I hope for a comfortable living.
q
What do you expect to be earning in five years?
a
I think the answer to this question really depends on market conditions.  What I expect to earn today has little to do
with what I expected to earn a couple of years ago, and I think that predicting how the industry will of all is a very
ambitious endeavor.  There are several conflicting trends which affect the compensation for software engineers.  On the
one hand there is the trend toward sending this work offshore.  On the other hand, the work is, in my opinion, getting
harder and requiring more sophistication.  Of course some people would dispute this and point to such packages as
Visual Basic as an example of very simple software environments which are capable of producing slick looking
applications.  I really couldn't guess what the sum of all these factors will be.
q
Why did you choose this career?
a
Because I think software engineering is more fun than any other job that I can think of.  It's a constant battle to
figure out various puzzles, and it also has the satisfaction of creating something new and in a way living.
q
What’s more important to you -- the work itself or how much you’re paid for doing it.
a
they are both important.  Even if I completely loved my work, if I were paid a salary well below my market value, I
would feel that I was not doing the right thing for my family.  And that the other end of the spectrum, even if I were
earning a fantastic salary, I wouldn't be happy if I hated the work.  Full time is too long to be doing something I
hate.
q
Describe the best job you've ever had.
a
@@white light?
q
Describe the worst job you've ever had.
a
College: doing electrical work in the cloyne crawl spaces.  Hot, respirator needed.  I shouldn't say that this work was
completely without its redeeming aspects.  I learned something about electrical wiring.  And I learned what kind of
work I didn't want to do for my career.
q
Describe the worst supervisor you've ever had.
a
Jacobsen: I frequently would not see him at all for a month.  Then he would run into my office in a great state of
education: "whatever it is that you're doing, drop it.  Instead do this!"  Then he would check for status very
frequently for the next few days until the urgent task was done.  Then he would disappear again.   -- I liked the guy
-- and I'm not sure the project suffered that much...
q
What would your last boss say about your work performance?
a
he would say that I was very productive, very dependable, and an excellent resource for my peers.
q
What motivates you to go the extra mile on a project or job?
a
@@my professional pride, and my desire to do a high-quality job.  I want my peers to be happy with me, and I want to be
happy with my work.
q
Why should I hire you?
a
@@because I'll be very productive and my work will be very high-quality, and I'll fit well with the department.
q
What qualifications do you have that make you successful in this career?
a
@@I'm dedicated to the work.  I learn very quickly, and I am eager to learn.
q
How do you determine or evaluate success?
a
@@the level of satisfaction of the customer is the final arbiter of success.
<ul>
<li>1. Of course, we don't always have complete control over that, but I think it has to be the main measure.</li>
<li>2. also, it is sometimes for the best to do things and away which maximize customer satisfaction over the longer-term, but not in the shorter.  E.g., forcing customers to upgrade to maintainable releases.  Another fundamental element of success for a worker: making ambitious commitments and then successfully following through on them.</li>
</ul>

q
In what ways do you think you can make a contribution to our company?
a
TODO
q
Do you have any hobbies? What do you do in your spare time?
a
TODO
q
Describe the workload in your current (or most recent) job.
a
since I was controlling all the schedules, it was generally a comfortable workload, so long as I was feeling patient
and it varied, but tended to be high.  The product
q
Which is more important: creativity or efficiency? Why?
a
TODO
q
What’s the most recent book you’ve read?
a
TODO
q
Describe the relationship that should exist between the supervisor and those reporting to him or her?
a
TODO
q
Describe the most rewarding experience of your career thus far.
What two or three accomplishments have given you the most satisfaction? Why?
a
TODO
q
If you were hiring a job-seeker for this position, what qualities would you look for?
a
TODO
q
In what kind of work environment are you most comfortable?
a
TODO
q
How do you work under pressure?
a
TODO
q
Are you good at delegating tasks?
a
TODO
q
How well do you adapt to new situations?
a
TODO
q
Why did you decide to seek a position in this company?
a
TODO
q
What can you tell us about our company?
a
TODO
q
What interests you about our products?
a
TODO
q
What do you know about our competitors?
a
TODO
q
What two or three things are most important to you in your job?
a
TODO
q
Are you seeking employment in a company of a certain size? Why?
a
TODO
q
What are your expectations regarding promotions and salary increases?
a
TODO
q
What criteria are you using to evaluate the company for which you hope to work?
a
TODO
q
Do you have a geographic preference? Why?
a
TODO
q
Are you willing to relocate?
a
TODO
q
Are you willing to travel for the job?
a
TODO
q
Why do you think you might like to live in the community in which our company is located?
a
TODO
q
What major problem have you encountered and how did you deal with it?
a
TODO
q
What have you learned from your mistakes?
a
TODO
q
What have you accomplished that shows your initiative and willingness to work?
a
TODO
q
Have you ever had difficulty with a supervisor? How did you resolve the conflict?
a
TODO

q
Summarize a situation where you took the initiative to get others going on an important issue, and played a leading
role to achieve the results wanted.
a
TODO
q
Which supervisors have you found easiest to work with and which have been most difficult?
This is to judge your adaptability.
a
TODO
q
What did you like best and least about your previous job?
Checking your administration and management skills.
a
TODO
q
Have you ever had to get a point across to different types of people? Give me an example and tell me what approach did you take?
Finding out about your communication skills.
a
TODO
q
Describe a work-related problem you had to face recently. What did you do to deal with it?
Decision making skills tested.
a
TODO
q
Give me an example of a time you did more than what was required in your job.
Seeking initiative.
a
TODO
q
Give me an example of a time you found it necessary to make an exception to the rules in order to get something done.
How is your integrity?
a
TODO
q
What was the best decision you ever made? What were the alternatives? How did you go about making it?
Checking your judgment.
a
TODO
q
Tell me about a time you had to gain the cooperation of a group over which you had little or no authority. What did you do? How effective were you?
Leadership.
a
TODO
q
Have you ever had trouble learning a new method or procedure? How did you deal with that situation?
Investigating your learning ability.
a
TODO
q
 Tell me about a problem you have had that would affect more than one department. How did you try to solve it?
For organizational cooperation. 
a
TODO
